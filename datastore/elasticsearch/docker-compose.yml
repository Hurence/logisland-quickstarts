version: '3'
services:

  zookeeper:
    image: hurence/zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    networks:
      - logisland

  kafka:
    image: hurence/kafka:0.10.2.2-scala-2.11
    hostname: kafka
    ports:
      - '9092:9092'
    volumes:
      - kafka-home:/opt/kafka_2.11-0.10.2.2/
    environment:
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_JMX_PORT: 7071
    networks:
      - logisland

  # Logisland container : does nothing but launching
  logisland:
    image: hurence/logisland:1.1.2
    command: tail -f bin/logisland.sh
    ports:
      - '4050:4050'
      - '8082:8082'
      - '9999:9999'
    volumes:
      - kafka-home:/opt/kafka_2.11-0.10.2.2/ # Just so that kafka scripts are available inside container
    environment:
      KAFKA_HOME: /opt/kafka_2.11-0.10.2.2
      KAFKA_BROKERS: kafka:9092
      ZK_QUORUM: zookeeper:2181
      ES_HOSTS: elasticsearch:9200
      ES_CLUSTER_NAME: es-logisland
    networks:
      - logisland

  # ES container
  # make sure to increase vm.max_map_count kernel setting like documented here :
  # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
  elasticsearch:
    environment:
      - ES_JAVA_OPT='-Xms1G -Xmx1G'
      - cluster.name=es-logisland
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
    hostname: elasticsearch
    image: 'docker.elastic.co/elasticsearch/elasticsearch:6.6.2'
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - logisland
      - es

  # Kibana container
  kibana:
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    image: 'docker.elastic.co/kibana/kibana:5.4.0'
    ports:
      - '5601:5601'
    networks:
      - es

volumes:
  kafka-home:

networks:
  logisland:
  es:
